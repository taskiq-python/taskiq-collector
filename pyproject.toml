[tool.poetry]
name = "taskiq_collector"
version = "0.1.0"
description = "Web application to collect taskiq data"
authors = []
maintainers = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.75.0"
uvicorn = { version = "^0.17.0", extras = ["standard"] }
pydantic = { version = "^1.9.0", extras = ["dotenv"] }
yarl = "^1.7.2"
ujson = "^5.1.0"
ormar = "^0.11.0"
alembic = "^1.7.7"
asyncpg = "^0.25.0"
aiofiles = "^0.8.0"
httptools = "^0.3.0"
prometheus-client = "^0.14.1"
prometheus-fastapi-instrumentator = "5.8.1"
sentry-sdk = "^1.5.12"
opentelemetry-api = { version = "^1.12.0rc2", allow-prereleases = true }
opentelemetry-sdk = { version = "^1.12.0rc2", allow-prereleases = true }
opentelemetry-exporter-otlp = { version = "^1.12.0rc2", allow-prereleases = true }
opentelemetry-instrumentation = "^0.32b0"
opentelemetry-instrumentation-fastapi = "^0.32b0"
opentelemetry-instrumentation-asyncpg = "^0.32b0"
loguru = "^0.6.0"
aiosqlite = "^0.17.0"
typing-extensions = "^4.3.0"
aiomysql = { version = "^0.0.22", optional = true }
mysqlclient = { version = "^2.1.0", optional = true }
psycopg2 = { version = "^2.9.3", optional = true }
psycopg2-binary = { version = "^2.9.3", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^7.0"
flake8 = "^4.0.1"
mypy = "^0.961"
isort = "^5.10.1"
yesqa = "^1.3.0"
pre-commit = "^2.19.0"
wemake-python-styleguide = "^0.16.1"
black = "^22.3.0"
autoflake = "^1.4"
pytest-cov = "^3.0.0"
anyio = "^3.6.1"
pytest-env = "^0.6.2"
httpx = "^0.22.0"

[tool.poetry.extras]
mysql = ["aiomysql", "mysqlclient"]
pg = ["psycopg2"]
pg-bin = ["psycopg2-binary"]

[tool.poetry.scripts]
taskiq_collector = "taskiq_collector.__main__:main"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["taskiq_collector"]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
plugins = ['pydantic.mypy']

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "TASKIQ_COLLECTOR_DB_URL=sqlite:////tmp/test_db.sqlite3",
    "TASKIQ_COLLECTOR_SENTRY_DSN=",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
